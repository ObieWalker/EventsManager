webpackHotUpdate("main",{

/***/ "./client/src/actions/editCenterAction.js":
/*!************************************************!*\
  !*** ./client/src/actions/editCenterAction.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _actionTypes = __webpack_require__(/*! ./actionTypes */ \"./client/src/actions/actionTypes.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isCenterUpdating = function isCenterUpdating(bool) {\n  return {\n    type: _actionTypes.IS_CENTER_UPDATING,\n    bool: bool\n  };\n};\n\nvar updateCenterSuccess = function updateCenterSuccess(updatedCenter, message) {\n  return {\n    type: _actionTypes.UPDATE_CENTER_SUCCESS,\n    updatedCenter: updatedCenter,\n    message: message\n  };\n};\n\nvar updateCenterFailure = function updateCenterFailure(error) {\n  return {\n    type: _actionTypes.UPDATE_CENTER_FAILURE,\n    error: error\n  };\n};\n\nvar updateCenter = function updateCenter(center) {\n  return function (dispatch) {\n    if (_axios2.default.defaults.headers.common.token === '') {\n      _axios2.default.defaults.headers.common.token = localStorage.getItem('jwtToken');\n    }\n\n    return (0, _axios2.default)({\n      method: 'PUT',\n      url: '/api/v1/centers/' + center.id,\n      headers: {\n        token: localStorage.getItem('jwtToken')\n      },\n      data: {\n        name: undefined.state.name,\n        address: undefined.state.address,\n        city: undefined.state.city,\n        capacity: undefined.state.capacity,\n        facility: undefined.state.facility\n      }\n    }).then(function (response) {\n      if (response) {\n        var message = response.data.message;\n\n        dispatch(updateCenterSuccess(response.data.center, message));\n        dispatch(isCenterUpdating(false));\n      }\n    }).catch(function () {\n      dispatch(updateCenterFailure('Unable to update your center. Try again later'));\n      dispatch(isCenterUpdating(false));\n    });\n  };\n};\n\nvar updateCenterRequest = function updateCenterRequest(center) {\n  return function (dispatch) {\n    // let cloudImageUrl = center.initialImageSrc;\n    dispatch(isCenterUpdating(true));\n\n    // if (center.imageFile.name) {\n    //   delete axios.defaults.headers.common['x-access-token'];\n    //   const imageData = new FormData();\n    //   imageData.append('file', center.imageFile);\n    //   imageData.append('upload_preset', process.env.CLOUDINARY_UPLOAD_PRESET);\n\n    //   return axios.post(process.env.CLOUDINARY_URL, imageData)\n    //     .then((response) => {\n    //       cloudImageUrl = response.data.url;\n    //       return dispatch(updateCenter(center, cloudImageUrl));\n    //     }).catch(() => {\n    //       dispatch(isCenterUpdating(false));\n    //       dispatch(updateCenterFailure('Unable to upload your center. Try again later'));\n    //     });\n    // }\n    return dispatch(updateCenter(center));\n  };\n};\n\nexports.default = updateCenterRequest;\n\n//# sourceURL=webpack:///./client/src/actions/editCenterAction.js?");

/***/ })

})