// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Modify Center Component component successfully rendered 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ModifyCenter
    center={
      Object {
        "address": "random address",
        "capacity": 500,
        "city": "random",
        "facility": "Tables and Chairs",
        "name": "random",
      }
    }
    modifyCenter={[MockFunction]}
    updateError=""
    updateSuccess=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <CenterForm
        center={
          Object {
            "address": "random address",
            "capacity": 500,
            "city": "random",
            "facility": "Tables and Chairs",
            "name": "random",
          }
        }
        defaultAddressValue="random address"
        defaultCapacityValue={500}
        defaultCenterName="random"
        defaultCityValue="random"
        defaultFacilityValue="Tables and Chairs"
        errors={Object {}}
        modifyOnClick={[Function]}
        onChange={[Function]}
      />,
      "className": "modifyCenterForm",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "addressValue": undefined,
        "capacityValue": undefined,
        "center": Object {
          "address": "random address",
          "capacity": 500,
          "city": "random",
          "facility": "Tables and Chairs",
          "name": "random",
        },
        "centerNameValue": undefined,
        "cityValue": undefined,
        "defaultAddressValue": "random address",
        "defaultCapacityValue": 500,
        "defaultCenterName": "random",
        "defaultCityValue": "random",
        "defaultFacilityValue": "Tables and Chairs",
        "errors": Object {},
        "facilityValue": undefined,
        "modifyOnClick": [Function],
        "onChange": [Function],
        "onFocus": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <CenterForm
          center={
            Object {
              "address": "random address",
              "capacity": 500,
              "city": "random",
              "facility": "Tables and Chairs",
              "name": "random",
            }
          }
          defaultAddressValue="random address"
          defaultCapacityValue={500}
          defaultCenterName="random"
          defaultCityValue="random"
          defaultFacilityValue="Tables and Chairs"
          errors={Object {}}
          modifyOnClick={[Function]}
          onChange={[Function]}
        />,
        "className": "modifyCenterForm",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "addressValue": undefined,
          "capacityValue": undefined,
          "center": Object {
            "address": "random address",
            "capacity": 500,
            "city": "random",
            "facility": "Tables and Chairs",
            "name": "random",
          },
          "centerNameValue": undefined,
          "cityValue": undefined,
          "defaultAddressValue": "random address",
          "defaultCapacityValue": 500,
          "defaultCenterName": "random",
          "defaultCityValue": "random",
          "defaultFacilityValue": "Tables and Chairs",
          "errors": Object {},
          "facilityValue": undefined,
          "modifyOnClick": [Function],
          "onChange": [Function],
          "onFocus": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
